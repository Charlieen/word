{"version":3,"sources":["logo.svg","components/api/unsplash.js","components/image/ImageCard.js","components/image/SearchBar.js","components/image/ImageList.js","components/image/ImageList_f.js","components/image/Image.js","components/image/modal.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/searchField.jsx","components/exercise/index.js","App.js","components/search/data.js","serviceWorker.js","index.js"],"names":["module","exports","axios","create","baseURL","headers","Authorization","ImageCard","React","Component","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","createRef","state","console","log","this","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageListFn","imgs","images","map","key","id","className","Image","onSearchSubmit2","term","unsplash","get","params","query","pics","data","results","marginTop","length","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","useState","modalStyle","open","setOpen","Modal","onClose","aria-labelledby","aria-describedby","Card","dialog","onClick","monster","name","CardList","monsters","item","SearchField","placeholder","onChange","e","search","target","value","Exercise1","handleClick3","handleClick2","handleClick1","bind","App","wordObjects","split","w","index","words","filter","includes","back","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f7b27c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nexport default axios.create({\n    baseURL:'https://api.unsplash.com',\n    headers:{\n        Authorization:'Client-ID 1Kis-OoGEa20UGsmKF_vD2KXNvcxNEulRMab-3fMtoU'\n    }\n})","import React from 'react';\n/*\n    Let the ImageCard render itself and its iamge\n    Reach into the DOM and figure out the height of the image\n    Set the image height on state to get the component to rerender\n    When rerendering, assign a 'grid-row-end'to make sure the image takes up\n    the appropirate space\n\n    ------\n    React Refs\n    Gives access to a single DOM element\n    We create refs in the constructor, assign them to instance variables,then\n    pass to a particular JSX element as props\n*/\nclass ImageCard extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.imageRef=  React.createRef();\n        this.state= {spans:0};\n    }\n    /*\n        So essentially it's the order of operations thing \n    */\n    componentDidMount(){\n        console.log(this.imageRef);\n    this.imageRef.current.addEventListener('load',this.setSpans);\n    }\n\n    setSpans = ()=>{\n        const height =this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height/10);\n        this.setState({spans:spans});\n    }\n\n\n    render(){\n        const {description,urls} = this.props.image;\n        return(\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} alt ={description} src= {urls.regular}/>\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import React from 'react';\n\n/*\n  Controlled  vs Uncontrolled  by react mechanism {depend on state update dom }\n  Flow :\n        User types in input\n        Callback gets invoked\n        We call setState with the new value\n        Component rerenders\n        Input is told what its value is(coming from state)\n\n*/\n/*\n    this in class  there are at least tow method to resolve \n    1: use bind(this)\n    2: use arrow function \n    (One of the special features of arrow function is that they automaically bind the value of this \n        for all the code inside the function  )\n*/\nclass SearchBar extends React.Component {\n    state = {term:'car'};\n\n    // onFormSubmit(event){\n    //     event.preventDefault();    \n    //     console.log(this.state.term);\n    // }\n//2  <form onSubmit={this.onFormSubmit.bind(this)} className=\"ui form\">\n\n// 3 <form onSubmit={(evnet)=>this.onFormSubmit(event))} className=\"ui form\">\n/* 1 So this arrow function make in the body of the arrow function can get the this ,and this refer the \n    SearchBar instance .\n*/\n        onSubmit= ()=>{\n            \n        }\n\n\n    onFormSubmit= (event)=>{\n       \n        event.preventDefault();\n\n        //this.props.onSubmit.call(this,this.state.term);\n        //console.log(this.state.term);\n\n        this.props.onSubmit(this.state.term);\n    }\n\n    render(){\n        // console.log(this);\n        return (\n        \n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Image Search</label>\n                        <input \n                        type=\"text\"\n                         onChange={(e)=>this.setState({term:e.target.value})}\n                         value={this.state.term}\n                         />\n                   \n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageList extends React.Component {\n    state= {v1:null};\n    \n    // this.getImageList(this.props.imgs)\n     \n\n    render(){\n\n        if(this.props.imgs.length>0){\n            return (\n                <div class=\"ui grid\">\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[0].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[1].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[2].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[3].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[4].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[5].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[6].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[7].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[8].urls.small}/></div>\n                    <div class=\"four wide column\"><img class=\"ui small image\" src={this.props.imgs[9].urls.small}/></div>\n                </div>\n            );\n        }else {\n            return (\n                <div>loading...</div>\n            )\n        }\n\n        \n    }\n\n    getImageList(imgs)  {\n        \n    var imglist=[];\n    for(let i=0; i< imgs.length;i++){\n        imglist.push(\n          <div class=\"four wide column\">\n          <img class=\"ui small image\" src={imgs[i].urls.small}/>\n         </div> \n        )\n    }\n    return ( \n        <div class=\"ui grid\">\n        {imglist}\n        </div>\n    );\n    }\n    \n}\n\nexport default ImageList;","import React from 'react';\nimport ImageCard from './ImageCard';\nimport './ImageListFn.css';\n/*\n the key is purely a performance consideration and it's going to help react render\n lists or updates to lists to be more precise more performant ,\n We only have to assign the key to the root element that we are returning from a\n list of records or\n*/\nconst ImageListFn = props => {\n    console.log(props.imgs);\n    // const images = props.imgs.map( (image)=>{\n    //     return <img alt={image.description} key={image.id} src={image.urls.small} />\n    // })\n\n    const images = props.imgs.map( (image) => {\n        return <ImageCard key={image.id} image = {image} />\n    })\n   return  <div className=\"image-list\">{images}</div>\n}\n\nexport default ImageListFn;","import React from 'react'\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport ImageListFn from './ImageList_f';\n/*\n    Component renders \n*/\nclass Image extends React.Component {\n\n    state= {imgs:[]};\n    \n    componentDidMount(){\n        this.onSearchSubmit2(this.props.term);\n    }\n\n   async onSearchSubmit2(term){\n       const pics = await  unsplash.get('/search/photos',{\n        params:{query:term}\n    });\n\n        this.setState({imgs:pics.data.results})\n\n    }\n    \n    render(){\n        return (\n            <div className=\"ui container\" style={{marginTop: '20px'}}>\n                <ImageListFn imgs={this.state.imgs} />\n                Found:{this.state.imgs.length} images.\n            </div>\n        );\n    }\n}\n\nexport default Image","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Image from './Image';\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 800,\n    height:1200,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport  const  SimpleModal = (props) => {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(true);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = ()=> {\n     \n      return (\n        <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{props.term}</h2>\n        <Image term={props.term}/>\n      </div>\n      );\n  } \n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body()}\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react'\nimport './card.style.css';\nimport {SimpleModal} from '../image/modal.component';\n  // <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=60x80`}/>\nexport class Card extends React.Component{\n    state={dialog:false};\n\n    render(){\n        return  (\n            <div className=\"card-container\" onClick={()=> this.setState({dialog:true}) }>\n            {this.state.dialog && <SimpleModal term={this.props.monster.name}/>}\n            <h1 className=\"card-item\">{this.props.monster.name}</h1>\n        </div>\n        );  \n    }\n} ","import React from 'react';\nimport './card-list.style.css'\nimport {Card} from '../card/card.component';\n\nexport const CardList= props=>\n{\n    //console.log('props',props);\n\n    return (\n        <div className=\"card-list\">{\n            props.monsters.map(item=><Card key={item.id} monster={item}/>)}\n        </div>\n    )\n\n}\n   \n    \n\n\nexport default CardList;","import React from 'react';\nimport './search.css';\n\n/**\n * \n * @param {*} props \n * About State ,if we wanted to see or do something with our state right after we set it then we have to \n * do it inside of this second argument function that will get called right after setState OK!\n *  by use  callback function merchenicl to make sure the  asthtcle  called \n */\nexport const  SearchField =(props)=> {\n    return (\n        <div className=\"container\">\n        <h1>Daniel 1000 Basic English Word WorkShop</h1>\n        <span className=\"label\">Search your word:  </span>\n            <input\n             className=\"search\" \n            placeholder='enter the word' \n            onChange={(e)=> props.search(e.target.value)} />\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class Exercise1 extends Component {\n\n    constructor(){\n        super();\n        this.handleClick2 = this.handleClick1.bind(this);\n    }\n    handleClick1(){\n        console.log('button 1 clicked');\n    }\n    handleClick3= ()=> {\n        console.log('button 3 clicked');\n    }\n\n    render() {\n        console.log('---1---');\n        return (\n            <div>\n                <button onClick={this.handleClick1}>click 1</button>\n                <button onClick={this.handleClick1}>click 2</button>\n                <button onClick={this.handleClick2}>click 3</button>\n                <button onClick={this.handleClick3}>click 4</button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component' \nimport {SearchField} from './components/search/searchField';\nimport {word} from './components/search/data';\nimport Exercise1 from './components/exercise/index';\n\n\nclass App extends React.Component {\n\n  constructor(){\n    const words =  word.split(',');\n    const wordObjects = words.map((w,index)=>({id:index,name:w}));\n\n    super();\n    this.state={monsters:wordObjects,back:[],words:wordObjects} \n  }\n  componentDidMount(){\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    // .then(response => (response.json()))\n    // .then(data=> this.setState({monsters:[...data],back:data}))\n\n    this.setState({monsters:this.state.words});\n  } \n  /**\n   * When search was declared, which means that when javascript first created our app component it also defined all of the methods\n   * on our components including search and it saw that this was an arrow function and because of this when this arrow functions came\n   * into existence to javascript it was going to bind any references to this inside of it to the context in which it was defined\n   * which is our component just like we saw with our my func in the browser.\n   * \n   * \n   */\n  search = (term)=> {\n      console.log('term:',term);\n      if(term){\n        const search = this.state.words.filter(item => item.name.includes(term));\n        this.setState({monsters:search});\n      }else {\n        this.setState({monsters:this.state.words});\n      }\n\n  }\n  //   // <CardList monsters={this.state.monsters}/>  \n  render(){\n    return (\n      <div className=\"App\">\n      <Exercise1/>\n      <SearchField search={this.search} />\n      <CardList monsters={this.state.monsters}/>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","export const word =`\na,about,above,across,act,actor,active,activity,add,afraid,after,again,age,ago,agree,air,all,alone,along,already,always,am,amount,an,and,angry,another,answer,any,anyone,anything,anytime,appear,apple,are,area,arm,army,around,arrive,art,as,ask,at,attack,aunt,autumn,away,baby,base,back,bad,bag,ball,bank,basket,bath,be,bean,bear,beautiful,beer,bed,bedroom,behave,before,begin,behind,bell,below,besides,best,better,between,big,bird,birth,birthday,bit,bite,black,bleed,block,blood,blow,blue,board,boat,body,boil,bone,book,border,born,borrow,both,bottle,bottom,bowl,box,boy,branch,brave,bread,break,breakfast,breathe,bridge,bright,bring,brother,brown,brush,build,burn,business,bus,busy,but,buy,by,cake,call,can,candle,cap,car,card,care,careful,careless,carry,case,cat,catch,central,century,certain,chair,chance,change,chase,cheap,cheese,chicken,child,children,chocolate,choice,choose,circle,city,class,clever,clean,clear,climb,clock,cloth,clothes,cloud,cloudy,close,coffee,coat,coin,cold,collect,colour,comb,come,comfortable,common,compare,complete,computer,condition,continue,control,cook,cool,copper,corn,corner,correct,cost,contain,count,country,course,cover,crash,cross,cry,cup,cupboard,cut,dance,danger,dangerous,dark,daughter,day,dead,decide,decrease,deep,deer,depend,desk,destroy,develop,die,different,difficult,dinner,direction,dirty,discover,dish,do,dog,door,double,down,draw,dream,dress,drink,drive,drop,dry,duck,dust,duty,each,ear,early,earn,earth,east,easy,eat,education,effect,egg,eight,either,electric,elephant,else,empty,end,enemy,enjoy,enough,enter,equal,entrance,escape,even,evening,event,ever,every,everyone,exact,everybody,examination,example,except,excited,exercise,expect,expensive,explain,extremely,eye,face,fact,fail,fall,false,family,famous,far,farm,father,fast,fat,fault,fear,feed,feel,female,fever,few,fight,fill,film,find,fine,finger,finish,fire,first,fit,five,fix,flag,flat,float,floor,flour,flower,fly,fold,food,fool,foot,football,for,force,foreign,forest,forget,forgive,fork,form,fox,four,free,freedom,freeze,fresh,friend,friendly,from,front,fruit,full,fun,funny,furniture,further,future,game,garden,gate,general,gentleman,get,gift,give,glad,glass,go,goat,god,gold,good,goodbye,grandfather,grandmother,grass,grave,great,green,grey,ground,group,grow,gun,hair,half,hall,hammer,hand,happen,happy,hard,hat,hate,have,he,head,healthy,hear,heavy,hello,help,heart,heaven,height,hen,her,here,hers,hide,high,hill,him,his,hit,hobby,hold,hole,holiday,home,hope,horse,hospital,hot,hotel,house,how,hundred,hungry,hour,hurry,husband,hurt,I,ice,idea,if,important,in,increase,inside,into,introduce,invent,iron,invite,is,island,it,its,jelly,job,join,juice,jump,just,keep,key,kid,kill,kind,king,kitchen,knee,knife,knock,know,ladder,lady,lamp,land,large,last,late,lately,laugh,lazy,lead,leaf,learn,leave,leg,left,lend,length,less,lesson,let,letter,library,lie,life,light,like,lion,lip,list,listen,little,live,lock,lonely,long,look,lose,lot,love,low,lower,luck,machine,main,make,male,man,many,map,mark,market,marry,matter,may,me,meal,mean,measure,meat,medicine,meet,member,mention,method,middle,milk,mill,million,mind,mine,minute,miss,mistake,mix,model,modern,moment,money,monkey,month,moon,more,morning,most,mother,mountain,mouse,mouth,move,much,music,must,my,name,narrow,nation,nature,near,nearly,neck,need,needle,neighbour,neither,net,never,new,news,newspaper,next,nice,night,nine,no,noble,noise,none,nor,north,nose,not,nothing,notice,now,number,obey,object,ocean,of,off,offer,office,often,oil,old,on,one,only,open,opposite,or,orange,order,other,our,out,outside,over,own,page,pain,paint,pair,pan,paper,parent,park,part,partner,party,pass,past,path,pay,peace,pen,pencil,people,pepper,per,perfect,period,person,petrol,photograph,piano,pick,picture,piece,pig,pill,pin,pink,place,plane,plant,plastic,plate,play,please,pleased,plenty,pocket,point,poison,police,polite,pool,poor,popular,position,possible,potato,pour,power,present,press,pretty,prevent,price,prince,prison,private,prize,probably,problem,produce,promise,proper,protect,provide,public,pull,punish,pupil,push,put,queen,question,quick,quiet,quite,radio,rain,rainy,raise,reach,read,ready,real,really,receive,record,red,remember,remind,remove,rent,repair,repeat,reply,report,rest,restaurant,result,return,rice,rich,ride,right,ring,rise,road,rob,rock,room,round,rubber,rude,rule,ruler,run,rush,sad,safe,sail,salt,same,sand,save,say,school,science,scissors,search,seat,second,see,seem,sell,send,sentence,serve,seven,several,sex,shade,shadow,shake,shape,share,sharp,she,sheep,sheet,shelf,shine,ship,shirt,shoe,shoot,shop,short,should,shoulder,shout,show,sick,side,signal,silence,silly,silver,similar,simple,single,since,sing,sink,sister,sit,six,size,skill,skin,skirt,sky,sleep,slip,slow,small,smell,smile,smoke,snow,so,soap,sock,soft,some,someone,something,sometimes,son,soon,sorry,sound,soup,south,space,speak,special,speed,spell,spend,spoon,sport,spread,spring,square,stamp,stand,star,start,station,stay,steal,steam,step,still,stomach,stone,stop,store,storm,story,strange,street,strong,structure,student,study,stupid,subject,substance,successful,such,sudden,sugar,suitable,summer,sun,sunny,support,sure,surprise,sweet,swim,sword,table,take,talk,tall,taste,taxi,tea,teach,team,tear,telephone,television,tell,ten,tennis,terrible,test,than,that,the,their,theirs,then,there,therefore,these,thick,thin,thing,think,third,this,those,though,threat,three,tidy,tie,title,to,today,toe,together,tomorrow,tonight,too,tool,tooth,top,total,touch,town,train,tram,travel,tree,trouble,true,trust,twice,try,turn,type,uncle,under,understand,unit,until,up,use,useful,usual,usually,vegetable,very,village,voice,visit,wait,wake,walk,want,warm,wash,waste,watch,water,way,we,weak,wear,weather,wedding,week,weight,welcome,well,west,wet,what,wheel,when,where,which,while,white,who,why,wide,wife,wild,will,win,wind,window,wine,winter,wire,wise,wish,with,without,woman,wonder,word,work,world,worry,worst,write,wrong,year,yellow,yes,yesterday,yet,you,young,your,yours,zero,zoo,zoom\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}